Alphabet

  %[%-adjx%]:0
  %[%+adjx%]:0
  %[%-comp%]:0
  %[%+comp%]:0
  %[%-sup%]:0
  %[%+sup%]:0
  %[%-tvx%]:0
  %[%+tvx%]:0
  %[%-dInd%]:0
  %[%+dInd%]:0
  %[%-dDef%]:0
  %[%+dDef%]:0
  %[%-m%]:0
  %[%+m%]:0
  %[%-f%]:0
  %[%+f%]:0
  %[%-pl%]:0
  %[%+pl%]:0
  %[%-pasv1%]:0
  %[%+pasv1%]:0 
  %[%-pasv2%]:0
  %[%+pasv2%]:0
  %[%-sg%]:0
  %[%+sg%]:0
  %[%-int%]:0
  %[%+int%]:0
  %[%-appl%]:0
  %[%+appl%]:0
  %[%-acaus%]:0
  %[%+acaus%]:0
  %[%-refl%]:0
  %[%+refl%]:0
  %[%-rec%]:0
  %[%+rec%]:0
  %[%-apass%]:0
  %[%+apass%]:0
  %[%-pos%]:0
  %[%+pos%]:0
  %[%-1ps%]:0
  %[%+1ps%]:0
  %[%-2p%]:0
  %[%+2p%]:0
  %[%-2o%]:0
  %[%+2o%]:0
  
;

Rules

"Remove paths without matching suffix feature - adjectivalization"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-adjx%] )
         Fy in ( %[%+adjx%] )
   matched ;


"Remove paths without matching prefix feature - adjectivalization"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-adjx%] )
         Fx in ( %[%+adjx%] )
matched ; 

"Remove paths without matching suffix feature - adjectival comparison"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-comp%] %[%-sup%] )
         Fy in ( %[%+comp%] %[%+sup%] )
   matched ;

"Remove paths without matching prefix feature - adjectival comparison"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-comp%] %[%-sup%] )
         Fx in ( %[%+comp%] %[%+sup%] )
matched ; 


"Remove paths without matching suffix feature - articles"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-dInd%] %[%-dDef%] )
         Fy in ( %[%+dInd%] %[%+dDef%] )
   matched ;

"Remove paths without matching prefix feature - articles"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-dInd%] %[%-dDef%] )
         Fx in ( %[%+dInd%] %[%+dDef%] )
matched ; 


"Remove paths without matching suffix feature - gender"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-m%] %[%-f%] %[%-mg%] )
         Fy in ( %[%+m%] %[%+f%] %[%+mg%] )
   matched ;

"Remove paths without matching prefix feature - gender"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-m%] %[%-f%] %[%-mg%] )
         Fx in ( %[%+m%] %[%+f%] %[%+mg%] )
matched ; 


"Remove paths without matching suffix feature - u plural"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-pl%] )
         Fy in ( %[%+pl%] )
   matched ;

"Remove paths without matching prefix feature - u plural"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-pl%] )
         Fx in ( %[%+pl%] )
matched ; 


"Remove paths without matching suffix feature - verb passivity"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-pasv1%] %[%-pasv2%] )
         Fy in ( %[%+pasv1%] %[%+pasv2%] )
   matched ;

"Remove paths without matching prefix feature - verb passivity"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-pasv1%] %[%-pasv2%] )
         Fx in ( %[%+pasv1%] %[%+pasv2%] )
matched ; 


"Remove paths without matching suffix feature - making verbs transitive"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-tvx%] )
         Fy in ( %[%+tvx%] )
   matched ;

"Remove paths without matching prefix feature - making verbs transitive"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-tvx%] )
         Fx in ( %[%+tvx%] )
matched ; 


"Remove paths without matching suffix feature - noun singularity"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-sg%] )
         Fy in ( %[%+sg%] )
   matched ;

"Remove paths without matching prefix feature - noun singularity"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-sg%] )
         Fx in ( %[%+sg%] )
matched ; 


"Remove paths without matching suffix feature - intensity"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-int%] )
         Fy in ( %[%+int%] )
   matched ;

"Remove paths without matching prefix feature - intensity"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-int%] )
         Fx in ( %[%+int%] )
matched ; 

"Remove paths without matching suffix feature - applicatives"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-appl%] )
         Fy in ( %[%+appl%] )
   matched ;

"Remove paths without matching prefix feature - applicatives"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-appl%] )
         Fx in ( %[%+appl%] )
matched ; 

"Remove paths without matching suffix feature - generalized object"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-apass%] )
         Fy in ( %[%+apass%] )
   matched ;

"Remove paths without matching prefix feature - generalized object"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-apass%] )
         Fx in ( %[%+apass%] )
matched ; 

"Remove paths without matching suffix feature - reflexive"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-refl%] )
         Fy in ( %[%+refl%] )
   matched ;

"Remove paths without matching prefix feature - reflexive"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-refl%] )
         Fx in ( %[%+refl%] )
matched ; 

"Remove paths without matching suffix feature - reciprocal"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-rec%] )
         Fy in ( %[%+rec%] )
   matched ;

"Remove paths without matching prefix feature - reciprocal"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-rec%] )
         Fx in ( %[%+rec%] )
matched ; 

"Remove paths without matching suffix feature - acausative"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-acaus%] )
         Fy in ( %[%+acaus%] )
   matched ;

"Remove paths without matching prefix feature - acausative"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-acaus%] )
         Fx in ( %[%+acaus%] )
matched ; 

"Remove paths without matching suffix feature - posessive common noun"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-pos%] )
         Fy in ( %[%+pos%] )
   matched ;

"Remove paths without matching prefix feature - possessive common noun"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-pos%] )
         Fx in ( %[%+pos%] )
matched ; 

"Remove paths without matching suffix feature - posessive relational noun"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-pp1sg%] )
         Fy in ( %[%+pp1sg%] )
   matched ;

"Remove paths without matching prefix feature - possessive relational noun"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-pp1sg%] )
         Fx in ( %[%+pp1sg%] )
matched ; 

"Remove paths without matching suffix feature - first person singular"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-1ps%] )
         Fy in ( %[%+1ps%] )
   matched ;

"Remove paths without matching prefix feature - first person singular"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-1ps%] )
         Fx in ( %[%+1ps%] )
matched ; 

"Remove paths without matching suffix feature - second person "
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-2p%] )
         Fy in ( %[%+2p%] )
   matched ;

"Remove paths without matching prefix feature - second person "
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-2p%] )
         Fx in ( %[%+2p%] )
matched ; 

"Remove paths without matching suffix feature - second person obj"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-2o%] )
         Fy in ( %[%+2o%] )
   matched ;

"Remove paths without matching prefix feature - second person obj"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-2o%] )
         Fx in ( %[%+2o%] )
matched ; 

"Remove paths without matching suffix feature - second person sg subj"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-2ssg%] )
         Fy in ( %[%+2ssg%] )
   matched ;

"Remove paths without matching prefix feature - second person sg subj"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-2ssg%] )
         Fx in ( %[%+2ssg%] )
matched ; 

"Remove paths without matching suffix feature - second person pl subj"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-2spl%] )
         Fy in ( %[%+2spl%] )
   matched ;

"Remove paths without matching prefix feature - second person pl subj"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-2spl%] )
         Fx in ( %[%+2spl%] )
matched ; 

"Remove paths without matching suffix feature - first person subj"
Fx:0 /<= _ ;
   except
       _ :* Fy:0 ;
   where Fx in ( %[%-1s%] )
         Fy in ( %[%+1s%] )
   matched ;

"Remove paths without matching prefix feature - first person subj"
Fx:0 /<= _ ;
   except
       Fy:0 :* _ ;
   where Fy in ( %[%-1s%] )
         Fx in ( %[%+1s%] )
matched ; 


